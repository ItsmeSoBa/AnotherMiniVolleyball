name: Cordova Build (VolleyTouch HTML)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # ðŸ‘‡ Pin Gradle 8.x (Cordova-Android 12 expects Gradle 8, not 9)
      - name: Install Gradle 8.7
        run: |
          set -eux
          curl -L -o gradle.zip https://services.gradle.org/distributions/gradle-8.7-bin.zip
          unzip -q gradle.zip -d "$HOME"
          rm gradle.zip
          echo "$HOME/gradle-8.7/bin" >> $GITHUB_PATH
          gradle -v

      - name: Install Android SDK cmdline-tools (local SDK)
        run: |
          set -eux
          SDK="$GITHUB_WORKSPACE/android-sdk"
          mkdir -p "$SDK/cmdline-tools"
          cd "$SDK/cmdline-tools"
          curl -L -o tools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q tools.zip
          rm -f tools.zip
          mv cmdline-tools latest
          export PATH="$SDK/cmdline-tools/latest/bin:$PATH"
          sdkmanager --version
          yes | sdkmanager --sdk_root="$SDK" \
            "platform-tools" "platforms;android-33" "build-tools;33.0.2" "cmdline-tools;latest"
          yes | sdkmanager --sdk_root="$SDK" --licenses || true

          # Make sure Cordova uses THIS SDK (not the runner's default)
          echo "ANDROID_SDK_ROOT=$SDK" >> $GITHUB_ENV
          echo "ANDROID_HOME=$SDK"     >> $GITHUB_ENV
          echo "$SDK/platform-tools"   >> $GITHUB_PATH
          echo "$SDK/build-tools/33.0.2" >> $GITHUB_PATH

      - name: Install Cordova
        run: npm i -g cordova@12

      - name: Build Cordova Android APK
        run: |
          set -eux

          # Create a fresh Cordova app
          cordova create app com.yourname.volleytouch VolleyTouch

          # Bring in your web assets
          if [ -d "www" ]; then
            rm -rf app/www
            cp -r www app/www
          elif [ -f "index.html" ]; then
            rm -rf app/www
            mkdir -p app/www
            cp index.html app/www/
          else
            echo "::error::No web assets found. Put your game in 'www/' (recommended) or at least an 'index.html' at repo root."
            exit 1
          fi

          cd app

          # Add Android platform (12.x pairs with Gradle 8)
          cordova platform add android@12

          # Build debug APK using our pinned Gradle 8.7 and local SDK
          echo "Using ANDROID_HOME=$ANDROID_HOME"
          which gradle
          gradle -v
          cordova build android --debug --no-telemetry

          ls -la platforms/android/app/build/outputs/apk/debug/

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: volleytouch-html-apk
          path: app/platforms/android/app/build/outputs/apk/debug/app-debug.apk
